% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_cohens_d_effect_sizes.R
\name{extract_cohens_d_effect_sizes}
\alias{extract_cohens_d_effect_sizes}
\title{summarize_mean_estimates}
\usage{
extract_cohens_d_effect_sizes(nested_fits)
}
\arguments{
\item{nested_fits}{A nested data frame.}
}
\description{
Extract the Cohen's d estimates from each iteration of a fitted t test analysis, e.g., for later meta analysis and/ forest plotting.
}
\examples{
set.seed(42)

true_population_effect_size <- 0.2

# population model
population_model <-
  create_population_model_with_random_item_loadings(
    model_specification = paste0("Y_latent ~ ", true_population_effect_size, "*X_latent"),
    item_loading_min_y = 0.5,
    item_loading_max_y = 0.9,
    n_indicators_y = 8,
  )

# run a simulation
results <- 
  generate_data(pop_model_label = "ttest indicators",
                pop_model = population_model, 
                factorial_design = TRUE,
                #n = 50, 
                n_mean = 100,
                n_sd = 25,
                iterations = 25) |>
  data_preprocessing(method = convert_to_likert) |>
  data_processing(method = use_latent_scores) |>
  fit_model(analysis = analysis_ttest) |>
  extract_cohens_d_effect_sizes()

# meta with no publication bias
fit <- results |>
  tidyr::unnest(effect_sizes) |>
  metafor::rma(yi = y,
               sei = se,
               data = _) 

# meta ESs
paste("true population effect size =", true_population_effect_size)
paste("meta effect size =", janitor::round_half_up(fit$beta[,1], 2))
 
}
